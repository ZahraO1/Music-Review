{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\desktop\\\\projects\\\\Music-Review\\\\music-review-comments-page\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//show all the comments\n//sort the comments by which one is recently updated?\n//have a link that shows the rest of the information\n//either a link or expand and shrink\nimport { useEffect, useState } from 'react';\nimport Gallery from './components/Gallery';\nimport Searchbar from './components/Searchbar';\nimport { DataContext } from './context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [search, setSearch] = useState('');\n  let [message, setMessage] = useState('Search for Reviews!');\n  let [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      document.title = `${search} Comment`;\n      const response = await fetch('http://localhost:5000/comments/4');\n      console.log(response);\n    };\n\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), message, /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n  /* const API_URL = 'http://localhost:5000/comments/'\n  \tuseEffect(() => {\n  \tif(search) {\n  \t\tconst fetchData = async () => {\n  \t\t\tdocument.title = `${search} Review`\n  \t\t\tconst response = await fetch(API_URL + search)\n  \t\t\tconst resData = await response.json()\n  \t\t\tif (resData.results.length > 0) {\n  \t\t\t\tsetData(resData.results)\n  \t\t\t} else {\n  \t\t\t\tsetMessage('Not Found')\n  \t\t\t}\n  \t\t}\n  \t\tfetchData()\n  \t}\n  }, [search])\n  \n  const handleSearch = (e, term) => {\n  \te.preventDefault()\n  \tsetSearch(term)\n  }\n  \treturn (\n  \t<div>\n  \t\t<Searchbar handleSearch = {handleSearch}/>\n  \t\t{message}\n  \t\t<DataContext.Provider value={data}>\n  \t\t\t<Gallery />\n  \t\t</DataContext.Provider>\n  \t</div>\n   \t); */\n}\n\n_s(App, \"XWoJnidaun7nDRG91kQV0ik9fd4=\");\n\n_c = App;\nexport default App;\n/* import { useState, useEffect } from 'react'\nimport { render } from 'react-dom';\nimport { useParams } from 'react-router-dom'\n\nfunction App() {\n    //const { id } = useParams()\n    const id = 1;\n    const [ allCommentData, setAllCommentData ] = useState([])\n\n    useEffect(() => {\n        //const API_URL = `http://localhost:5000/comments/id/${id}`\n        const API_URL = `http://localhost:5000/comments`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            console.log(resData)\n            setAllCommentData(resData)\n        }\n        fetchData()\n    }, [id])\n    \n    const renderComments = allCommentData.map((comment,i)=>{\n      return (\n        <div key={i}>\n          <p>{comment.song_name}</p>\n          <p>{comment.rating}</p>\n        </div>\n      )\n    })\n\n    return(\n      <div>\n        <p></p>\n        {renderComments}\n      </div>\n    )\n\n}\n\nexport default App; */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Gallery","Searchbar","DataContext","App","search","setSearch","message","setMessage","data","setData","fetchData","document","title","response","fetch","console","log"],"sources":["C:/Users/HP/desktop/projects/Music-Review/music-review-comments-page/src/App.js"],"sourcesContent":["//show all the comments\n//sort the comments by which one is recently updated?\n//have a link that shows the rest of the information\n//either a link or expand and shrink\n\n\n\nimport {useEffect, useState } from 'react'\nimport Gallery from './components/Gallery'\nimport Searchbar from './components/Searchbar'\nimport { DataContext } from './context/DataContext'\n\nfunction App() {\n\tlet [search, setSearch] = useState('')\n\tlet [message, setMessage] = useState('Search for Reviews!')\n\tlet [data, setData] = useState([])\n\n  useEffect(()=>{\n    const fetchData = async () =>{\n      document.title = `${search} Comment`\n      const response = await fetch ('http://localhost:5000/comments/4')\n      console.log(response)\n    }\n    fetchData()\n  })\n\n  return(\n    <div>\n      <Searchbar/>\n      {message}\n      <Gallery/>\n    </div>\n  )\n\n\t/* const API_URL = 'http://localhost:5000/comments/'\n\n\tuseEffect(() => {\n\t\tif(search) {\n\t\t\tconst fetchData = async () => {\n\t\t\t\tdocument.title = `${search} Review`\n\t\t\t\tconst response = await fetch(API_URL + search)\n\t\t\t\tconst resData = await response.json()\n\t\t\t\tif (resData.results.length > 0) {\n\t\t\t\t\tsetData(resData.results)\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage('Not Found')\n\t\t\t\t}\n\t\t\t}\n\t\t\tfetchData()\n\t\t}\n\t}, [search])\n\t\n\tconst handleSearch = (e, term) => {\n\t\te.preventDefault()\n\t\tsetSearch(term)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Searchbar handleSearch = {handleSearch}/>\n\t\t\t{message}\n\t\t\t<DataContext.Provider value={data}>\n\t\t\t\t<Gallery />\n\t\t\t</DataContext.Provider>\n\t\t</div>\n  \t); */\n}\n\nexport default App;\n\n/* import { useState, useEffect } from 'react'\nimport { render } from 'react-dom';\nimport { useParams } from 'react-router-dom'\n\nfunction App() {\n    //const { id } = useParams()\n    const id = 1;\n    const [ allCommentData, setAllCommentData ] = useState([])\n\n    useEffect(() => {\n        //const API_URL = `http://localhost:5000/comments/id/${id}`\n        const API_URL = `http://localhost:5000/comments`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            console.log(resData)\n            setAllCommentData(resData)\n        }\n        fetchData()\n    }, [id])\n    \n    const renderComments = allCommentData.map((comment,i)=>{\n      return (\n        <div key={i}>\n          <p>{comment.song_name}</p>\n          <p>{comment.rating}</p>\n        </div>\n      )\n    })\n\n    return(\n      <div>\n        <p></p>\n        {renderComments}\n      </div>\n    )\n\n}\n\nexport default App; */"],"mappings":";;;AAAA;AACA;AACA;AACA;AAIA,SAAQA,SAAR,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACd,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAAlC;EACA,IAAI,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,qBAAD,CAApC;EACA,IAAI,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAA9B;EAECD,SAAS,CAAC,MAAI;IACZ,MAAMY,SAAS,GAAG,YAAW;MAC3BC,QAAQ,CAACC,KAAT,GAAkB,GAAER,MAAO,UAA3B;MACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAF,CAA5B;MACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;IACD,CAJD;;IAKAH,SAAS;EACV,CAPQ,CAAT;EASA,oBACE;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGJ,OAFH,eAGE,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;EAQD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;;GAtDQH,G;;KAAAA,G;AAwDT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}