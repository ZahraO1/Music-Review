{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\desktop\\\\projects\\\\Music-Review\\\\music-review-comments-page\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//show all the comments\n//sort the comments by which one is recently updated?\n//have a link that shows the rest of the information\n//either a link or expand and shrink\n\n/* import {render} from \"@testing-library/react\"\nimport React, {useState,useEffect, Fragment} from \"react\";\n\n//components\nimport InputComments from \"./components/InputComments\"\nimport ListEvents from \"./components/ListEvents\"\n\nfunction App() {\n    useEffect(() =>{\n      const fetchData = async () =>{\n        let response = await fetch(`http://localhost:5000/comments`)\n        let data = await response.json()\n      }\n      fetchData()\n    },[])\n\t/* const API_URL = 'http://localhost:5000/comments/'\n\n\tuseEffect(() => {\n\t\tif(search) {\n\t\t\tconst fetchData = async () => {\n\t\t\t\tdocument.title = `${search} Review`\n\t\t\t\tconst response = await fetch(API_URL + search)\n\t\t\t\tconst resData = await response.json()\n\t\t\t\tif (resData.results.length > 0) {\n\t\t\t\t\tsetData(resData.results)\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage('Not Found')\n\t\t\t\t}\n\t\t\t}\n\t\t\tfetchData()\n\t\t}\n\t}, [search])\n\t\n\tconst handleSearch = (e, term) => {\n\t\te.preventDefault()\n\t\tsetSearch(term)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Searchbar handleSearch = {handleSearch}/>\n\t\t\t{message}\n\t\t\t<DataContext.Provider value={data}>\n\t\t\t\t<Gallery />\n\t\t\t</DataContext.Provider>\n\t\t</div>\n  \t);\n}\n\nexport default App; */\nimport { useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //const { id } = useParams()\n  const id = 1;\n  const [allCommentData, setAllCommentData] = useState([]);\n  useEffect(() => {\n    //const API_URL = `http://localhost:5000/comments/id/${id}`\n    const API_URL = `http://localhost:5000/comments`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      console.log(resData);\n      setAllCommentData(resData);\n    };\n\n    fetchData();\n  }, [id]);\n  const renderComments = allCommentData.map((comment, i) => {\n    //add hyperlink to the comment\n    //when hyperlink is clicked, shows all the data\n    //shows update and delete button\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [comment.song_name, \" - \", comment.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderComments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"G9EJyM/BtUVg7QpMJOOq8a6GHfo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","render","useParams","App","id","allCommentData","setAllCommentData","API_URL","fetchData","response","fetch","resData","json","console","log","renderComments","map","comment","i","song_name","rating"],"sources":["C:/Users/HP/desktop/projects/Music-Review/music-review-comments-page/src/App.js"],"sourcesContent":["//show all the comments\n//sort the comments by which one is recently updated?\n//have a link that shows the rest of the information\n//either a link or expand and shrink\n\n/* import {render} from \"@testing-library/react\"\nimport React, {useState,useEffect, Fragment} from \"react\";\n\n//components\nimport InputComments from \"./components/InputComments\"\nimport ListEvents from \"./components/ListEvents\"\n\nfunction App() {\n    useEffect(() =>{\n      const fetchData = async () =>{\n        let response = await fetch(`http://localhost:5000/comments`)\n        let data = await response.json()\n      }\n      fetchData()\n    },[])\n\t/* const API_URL = 'http://localhost:5000/comments/'\n\n\tuseEffect(() => {\n\t\tif(search) {\n\t\t\tconst fetchData = async () => {\n\t\t\t\tdocument.title = `${search} Review`\n\t\t\t\tconst response = await fetch(API_URL + search)\n\t\t\t\tconst resData = await response.json()\n\t\t\t\tif (resData.results.length > 0) {\n\t\t\t\t\tsetData(resData.results)\n\t\t\t\t} else {\n\t\t\t\t\tsetMessage('Not Found')\n\t\t\t\t}\n\t\t\t}\n\t\t\tfetchData()\n\t\t}\n\t}, [search])\n\t\n\tconst handleSearch = (e, term) => {\n\t\te.preventDefault()\n\t\tsetSearch(term)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Searchbar handleSearch = {handleSearch}/>\n\t\t\t{message}\n\t\t\t<DataContext.Provider value={data}>\n\t\t\t\t<Gallery />\n\t\t\t</DataContext.Provider>\n\t\t</div>\n  \t);\n}\n\nexport default App; */\n\nimport { useState, useEffect } from 'react'\nimport { render } from 'react-dom';\nimport { useParams } from 'react-router-dom'\n\nfunction App() {\n    //const { id } = useParams()\n    const id = 1;\n    const [ allCommentData, setAllCommentData ] = useState([])\n\n    useEffect(() => {\n        //const API_URL = `http://localhost:5000/comments/id/${id}`\n        const API_URL = `http://localhost:5000/comments`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            console.log(resData)\n            setAllCommentData(resData)\n        }\n        fetchData()\n    }, [id])\n    \n    const renderComments = allCommentData.map((comment,i)=>{\n      //add hyperlink to the comment\n      //when hyperlink is clicked, shows all the data\n      //shows update and delete button\n      return (\n        <div key={i}>\n          <p>{comment.song_name} - {comment.rating}</p>\n        </div>\n      )\n    })\n\n    return(\n      <div>\n        {renderComments}\n      </div>\n    )\n\n}\n\nexport default App;"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX;EACA,MAAMC,EAAE,GAAG,CAAX;EACA,MAAM,CAAEC,cAAF,EAAkBC,iBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;EAEAC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,OAAO,GAAI,gCAAjB;;IACA,MAAMC,SAAS,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;MACA,MAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;MACAC,OAAO,CAACC,GAAR,CAAYH,OAAZ;MACAL,iBAAiB,CAACK,OAAD,CAAjB;IACH,CALD;;IAMAH,SAAS;EACZ,CAVQ,EAUN,CAACJ,EAAD,CAVM,CAAT;EAYA,MAAMW,cAAc,GAAGV,cAAc,CAACW,GAAf,CAAmB,CAACC,OAAD,EAASC,CAAT,KAAa;IACrD;IACA;IACA;IACA,oBACE;MAAA,uBACE;QAAA,WAAID,OAAO,CAACE,SAAZ,SAA0BF,OAAO,CAACG,MAAlC;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,GAAUF,CAAV;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CATsB,CAAvB;EAWA,oBACE;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAMH;;GAlCQZ,G;;KAAAA,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}